{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aumar\\\\Desktop\\\\Workspace\\\\06-bigger-next-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: \"A first meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"The first description\",\n    image: \"https://cdn.pixabay.com/photo/2015/03/31/23/08/neuschwanstein-701732_960_720.jpg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Tron:Mongo@cluster0.1ubu4yh.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const client = await MongoClient.connect(\"mongodb+srv://Tron:Mongo@cluster0.1ubu4yh.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = meetupsCollection.findOne({\n    _id\n  });\n  client.close();\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://cdn.pixabay.com/photo/2015/03/31/23/08/neuschwanstein-701732_960_720.jpg\",\n        address: \"Some Street 5, Some City\",\n        description: \"The first description\",\n        image: \"https://cdn.pixabay.com/photo/2015/03/31/23/08/neuschwanstein-701732_960_720.jpg\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/aumar/Desktop/Workspace/06-bigger-next-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","props","meetupData","image","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,OAAO,EAAC,0BAFV;AAGE,IAAA,WAAW,EAAC,uBAHd;AAIE,IAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,oFADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMlB,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,oFADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAChB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA;AAAD,GAA1B,CAArB;AAEAP,EAAAA,MAAM,CAACS,KAAP;AAEA,QAAMM,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,SAAO;AACLQ,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,kFAFQ;AAGVC,QAAAA,OAAO,EAAE,0BAHC;AAIVC,QAAAA,WAAW,EAAE,uBAJH;AAKVF,QAAAA,KAAK,EACH;AANQ;AADP;AADF,GAAP;AAYD;AAED,eAAe3B,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nfunction MeetupDetails() {\r\n  return (\r\n    <MeetupDetail\r\n      title=\"A first meetup\"\r\n      address=\"Some Street 5, Some City\"\r\n      description=\"The first description\"\r\n      image=\"https://cdn.pixabay.com/photo/2015/03/31/23/08/neuschwanstein-701732_960_720.jpg\"\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Tron:Mongo@cluster0.1ubu4yh.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Tron:Mongo@cluster0.1ubu4yh.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup=meetupsCollection.findOne({_id})\r\n\r\n  client.close();\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  console.log(meetupId);\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image:\r\n          \"https://cdn.pixabay.com/photo/2015/03/31/23/08/neuschwanstein-701732_960_720.jpg\",\r\n        address: \"Some Street 5, Some City\",\r\n        description: \"The first description\",\r\n        image:\r\n          \"https://cdn.pixabay.com/photo/2015/03/31/23/08/neuschwanstein-701732_960_720.jpg\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}